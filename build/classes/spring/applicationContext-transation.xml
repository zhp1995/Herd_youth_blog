<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans-3.2.xsd 
		http://www.springframework.org/schema/mvc 
		http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd 
		http://www.springframework.org/schema/context 
		http://www.springframework.org/schema/context/spring-context-3.2.xsd 
		http://www.springframework.org/schema/aop 
		http://www.springframework.org/schema/aop/spring-aop-3.2.xsd 
		http://www.springframework.org/schema/tx 
		http://www.springframework.org/schema/tx/spring-tx-3.2.xsd ">


	 <!-- 事务管理器 -->
	 <bean id="transactionManager"  class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
	 	<property name="dataSource" ref="dataSource"/>
	 </bean>
	 
	 <!-- 通知 -->
	 <tx:advice id="txAdvice" transaction-manager="transactionManager">
	 	<tx:attributes>
	 		<tx:method name="save*" propagation="REQUIRED"/>
	 		<tx:method name="insert*" propagation="REQUIRED"/>
	 		<tx:method name="update*" propagation="REQUIRED"/>
	 		<tx:method name="delete*" propagation="REQUIRED"/>
	 		<tx:method name="find*" propagation="SUPPORTS" read-only="true"/>
	 		<tx:method name="select*" propagation="SUPPORTS" read-only="true"/>
	 		<tx:method name="get*" propagation="SUPPORTS" read-only="true"/>
	 	</tx:attributes>
	 </tx:advice>
	 
	 <!-- REQUIRED：支持当前事务，如果当前没有事务，就新建一个事务。这是最常见的选择。
		  SUPPORTS：支持当前事务，如果当前没有事务，就以非事务方式执行。
		  MANDATORY：支持当前事务，如果当前没有事务，就抛出异常。
		  REQUIRES_NEW：新建事务，如果当前存在事务，把当前事务挂起。
		  NOT_SUPPORTED：以非事务方式执行操作，如果当前存在事务，就把当前事务挂起。
		  NEVER：以非事务方式执行，如果当前存在事务，则抛出异常。
		  NESTED：支持当前事务，如果当前事务存在，则执行一个嵌套事务，如果当前没有事务，就新建一个事务 
	 
	     一般采用注解方式，将事物细化	 
     -->
	  
	 <!-- aop -->
	 <aop:config>
	 	<aop:advisor advice-ref="txAdvice" pointcut="execution(* cn.tjz.service.impl.*.*(..))"/>
	 </aop:config>
	
</beans>